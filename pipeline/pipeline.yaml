apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  namespace: sonar-youtube
  name: hello-world-service
spec:
  params:
    - description: The Git commit
      name: commit
      type: string
    - description: The Git branch
      name: branch
      type: string
      default: master

  tasks:
    - name: fetch-repo
      taskRef:
        kind: Task
        name: git-clone
      params:
        - name: url
          value: https://github.com/rohan-ap/openvalue-tekton-cicd-talk.git
        - name: revision
          value: $(params.branch)
      workspaces:
        - name: output
          workspace: shared-workspace

    - name: build
      taskRef:
        kind: Task
        name: maven
      runAfter:
        - fetch-repo
      params:
        - name: CONTEXT_DIR
          value: "hello-world-service"
        - name: GOALS
          value:
            - -DskipTests
            - clean
            - package
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace

    - name: create-image
      taskRef:
        kind: Task
        name: kaniko
      params:
        - name: BUILDER_IMAGE
          value: gcr.io/kaniko-project/executor:v1.8.1
        - name: DOCKERFILE
          value: Dockerfile
        - name: CONTEXT
          value: hello-world-service
        - name: IMAGE
          value: "quay.io/rohanp/sonar-youtube:$(params.commit)"
        - name: EXTRA_ARGS
          value:
            - "--skip-tls-verify"
      runAfter:
        - build
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: gcpcreds
          workspace: gcpcreds

    - name: deploy
      taskRef:
        kind: Task
        name: helm-upgrade-from-source
      runAfter:
        - create-image
      params:
        - name: charts_dir
          value: hello-world-service/helm
        - name: release_name
          value: hello-world-service
        - name: release_namespace
          value: openvalue-prd
        - name: overwrite_values
          value: "image.tag=$(params.commit)"
      workspaces:
        - name: source
          workspace: shared-workspace

  finally:
    - name: notify-build-failed
      when:
        - input: $(tasks.build.status)
          operator: in
          values: [ "None", "Failed" ]
      taskRef:
        kind: Task
        name: slack-notify
      params:
        - name: text
          value: "[hello-world-service] Build failed $(params.branch) ($(params.commit))!"

    - name: notify-deploy-failed
      when:
          - input: $(tasks.deploy.status)
            operator: in
            values: [ "None", "Failed" ]
      taskRef:
        kind: Task
        name: slack-notify
      params:
        - name: text
          value: "[hello-world-service] Deploy failed $(params.branch) ($(params.commit))!"

    - name: notify-success
      when:
        - input: $(tasks.status)
          operator: in
          values: [ "Succeeded" ]
      taskRef:
        kind: Task
        name: slack-notify
      params:
        - name: text
          value: "[hello-world-service] Deployed $(params.branch) ($(params.commit)) successfully!"

  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: gcpcreds
